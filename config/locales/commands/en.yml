en:
  commands:
    request:
      sent: "Request `%{uuid}` has been sent to %{user}. They have 1 day to respond to your request."
      accept_name: "To **accept** this request"
      accept_value: "[ACCEPT](%{url})"
      decline_name: "To **decline** this request"
      decline_value: "[DECLINE](%{url})"
      command_usage_name: "Don't feel safe going to my website?"
      command_usage_value: "That's okay! You can accept or decline this request by using ```%{prefix}accept %{uuid}``` or ```%{prefix}decline %{uuid}```"
    base:
      description: A test command
      example: |-
        A test example
    eval:
      description: "Executes the provided string in ruby"
      example: |-
        **`%{prefix}eval true`**
        Returns true
    say:
      description: "A development command. Forces the bot to say whatever is inputted"
      example: |-
        **`%{prefix}say hello`**
        The bot will reply hello
    help:
      arguments:
        category: "The categories can be found by just using `%{prefix}help`"
      description: "A helpful command. An unhelpful description"
      example: |-
        **`%{prefix}help`**
        Displays information about getting started with Exile Server Manager

        **`%{prefix}help commands`**
        Displays all commands

        **`%{prefix}help set_id`**
        Displays detailed information about the `set_id` command
      categories:
        name: "Categories"
        value: |-
         **`%{prefix}help commands`**
         List all commands

         **`%{prefix}help <command_name>`**
         Get information about the provided command
      getting_started:
        title: "Hi %{user}! My name is Exile Server Manager, or ESM for short!"
        description: "I have a bunch of useful commands for both players and server owners alike."
      commands:
        title: "Commands"
        description: "You can view more information about a command by with `%{prefix}help command_name`\nFor example: `%{prefix}help servers`"
        player_commands_title: "__Player Commands__"
        admin_commands_title: "__Admin Commands__"
        development_commands_title: "__Development Commands__"
      command:
        title: "`%{prefix}%{name}` Documentation"
        usage: "**__Usage__**"
        aliases:
          name: "**__Aliases__**"
          value: "This command can also be accessed by the following aliases: %{aliases}"
        arguments: "**__Arguments__**"
        examples: "**__Examples__**"
    mode:
      arguments:
        mode: "Sets which mode, valid options are `server` or `player`"
      description: "Changes which mode ESM is in"
      example: |-
        **`%{prefix}mode esm server`**
        Disables player mode. Set this mode if your community hosts servers

        **`%{prefix}mode esm player`**
        Enables player mode. Set this mode if you play on servers
      error_messages:
        servers_exist:
          title: "I'm sorry, %{user}"
          description: "In order to enable player mode, you must remove any servers you have added to me via my [Dashboard](https://www.esmbot.com/portal)"
        same_mode:
          title: "Looks like there's nothing to change"
          description: "You already have player mode %{state} üëç"
        no_permissions:
          title: "I'm sorry, %{user}"
          description: "Only the owner of this community has access to this command"
      enabled: "‚úÖ Player mode has been enabled for **%{community_name}**. All of my player commands may now be used on its Discord server"
      disabled: "‚úÖ Player mode has been disabled for **%{community_name}**. You may now manage your community and servers via my [Dashboard](https://www.esmbot.com/portal)"
    id:
      description: "Displays the current Community's community ID for ESM"
      example: |-
        `%{prefix}id`
        Returns the Community's ID
      embed:
        description: "**%{community_name}'s** community ID is **`%{community_id}`**"
        field:
          name: "Want to list all registered servers for this community?"
          value:  "**`%{prefix}servers %{community_id}`**"
    whois:
      description: "Displays all available information about a player via their Steam UID, Discord ID, or Mention"
      example: |-
        **`%{prefix}whois @Bryan`**
        Using their mention, get all available information about this player

        **`%{prefix}whois 76561198037177305`**
        Using their steam uid, get all available information about this player

        **`%{prefix}whois 137709767954137088`**
        Using their Discord ID, get all available information about this player
      discord:
        header: "__Discord Information__"
        id: "ID"
        username: "Username"
        status: "Status"
        created_at: "Created"
      steam:
        header: "__Steam Information__"
        id: "ID"
        username: "Username"
        visibility: "Profile Visibility"
        created_at: "Created"
        community_banned: "Community banned?"
        vac_banned: "VAC banned?"
        number_of_vac_bans: "Number of VAC bans"
        days_since_vac_ban: "Days since last VAC ban"
    me:
      description: "Displays information about your player (money, health, poptabs, territories, etc.) on the requested server"
      example: |-
        **`%{prefix}me esm_malden`**
        Returns my player information on `esm_malden`
      embed:
        title: "%{user}'s stats on `%{server_id}`"
    server:
      description: "Displays connection, up time, next restart and other miscellanous information about the provided server ID"
      example: |-
        **`%{prefix}server esm_malden`**
        Returns information about the server `esm_malden`
      online_for: "‚úÖ Online for"
      restart_in: "‚è∞ Next restart in"
    servers:
      description: "Displays all registered servers for a given community ID, regardless if they are online or not"
      example: |-
        **`%{prefix}servers esm`**
        Returns all registered servers for `esm`.
      offline: "‚ùå Offline"
      offline_for: "‚ùå Offline for %{time}"
      embed:
        error_messages:
          no_servers:
            description: "I was unable to find any registered servers for `%{community_id}`."
            field_1:
              name: "Are you the owner?"
              value: "You can add new servers from your [community dashboard](https://www.esmbot.com/login)"
    territories:
      description: "Displays all territories that you own or have joined for the provided server ID"
      example: |-
        **`%{prefix}territories esm_malden`**
        Returns all owned or joined territories for server `esm_malden`
      no_territories: "Hey %{user}, I was unable to find any territories for you on `%{server_id}`"
      current_territory_stats: "__Current Territory Stats__"
      next_territory_stats: "__Next Territory Stats__"
      territory_members: "__Territory Members__"
    pay:
      description: "Pay the territory protection for a territory using poptabs from your locker.\nYou can see your territories by using `%{prefix}territories`"
      example: |-
        **`%{prefix}pay esm_malden qqoej`**
        Pay the territory protection for `qqoej` on server `esm_malden`

        **`%{prefix}pay esm_malden fort_kickass`**
        Pay the territory protection for custom territory ID `fort_kickass` on server `esm_malden`
      embed:
        description: "%{user}, `%{server_id}` has successfully received the payment of **%{cost} poptabs** for `%{territory_id}`.\nYou have **%{locker_amount} poptabs** left in your locker."
    birb:
      description: "Who doesn't like some high quality birbs?"
      example: |-
        **`%{prefix}birb`**
        Returns a random bird image
      waiting: "Tossing bird seed..."
    doggo:
      description: "Humanity's best friend"
      example: |-
        **`%{prefix}doggo`**
        Returns a random dog image
      waiting: "Shaking treat jar..."
    meow:
      description: "It's so fluffy I'm going to die!!!"
      example: |-
        **`%{prefix}meow`**
        Returns a random cat image
      waiting: "pispispispispispispispis"
    snek:
      description: "Nope rope, danger noodle, whatever you want to call them. One thing for sure is that they are cute."
      example: |-
        **`%{prefix}snek`**
        Returns a random snake image
      waiting: "Slithering..."
    gamble:
      description: "Feeling lucky? This command will gamble the specified amount of poptabs for the provided server ID. Poptabs are taken from your locker on that server."
      example: |-
        **`%{prefix}gamble esm_malden 50`**
        Gambles 50 poptabs from the locker on server `esm_malden`

        **`%{prefix}gamble esm_altis half`**
        Gambles half of the poptabs in the locker on server `esm_altis`

        **`%{prefix}gamble esm_tanoa all`**
        Gambles all of the poptabs in the locker on server `esm_tanoa`

        **`%{prefix}gamble esm_namalsk stats`**
        Displays gambling statistics for server `esm_namalsk`
      arguments:
        amount: "The amount of poptabs to gamble. Poptabs are withdrawled from your locker.\nThe following options can be provided instead of a number:\n- `all`: Gambles all of your poptabs in your locker.\n- `half`: Gambles half of your poptabs in your locker\n- `stats`: Returns win/loss statistics for the provided server"
      error_message:
        bad_amount: "I'm sorry %{user}, but you simply cannot gamble nothing."
      stats:
        title: "Gambling statistics for `%{server_id}`"
        user_stats: "**%{user}'s stats**"
        server_stats: "**Server stats**"
        total_wins: "Total Wins"
        total_losses: "Total Losses"
        total_poptabs_won: "Total Poptabs Won"
        total_poptabs_lost: "Total Poptabs Lost"
        most_poptabs_won: "Most Poptabs Won"
        most_poptabs_lost: "Most Poptabs Lost"
        current_streak: "Current Streak"
        longest_win_streak: "Longest Win Streak"
        longest_losing_streak: "Longest Losing Streak"
        longest_current_streak: "Longest Current Streak"
        user_with: "%{user} with %{value}"
        user_with_poptabs: "%{user} with %{value} poptabs"
    set_id:
      description: "**Territory Owner Only.** Sets a custom territory ID for the provide server ID. Once set, this custom territory ID can be used whenever a command requires a territory ID argument."
      example: |-
        **`%{prefix}setid esm_malden jqjoe no_u`**
        Sets territory `jqjoe` to be `no_u`

        **`%{prefix}setid esm_altis fort_awesome tent_sadness`**
        Changes territory `fort_awesome` to be `tent_sadness`
      arguments:
        new_territory_id: "The new territory ID to use. This ID can be 3 to 20 characters long and can **only contain letters, numbers, and underscores**."
      error_message:
        minimum_characters: "I'm sorry %{user}, the new territory ID must be at least 3 characters long"
        maximum_characters: "I'm sorry %{user}, the new territory ID cannot be longer than 20 characters"
        access_denied: "I'm sorry %{user}, you are not allowed to do that."
      success_message: ":confetti_ball: \nTerritory `%{old_territory_id}`'s ID is now `%{new_territory_id}`. You can now use this ID wherever a command requires `<territory_id>`\nFor example: ```%{prefix}pay %{server_id} %{new_territory_id}```"
    accept:
      description: "Accepts a request based off its UUID"
      example: |-
        **`%{prefix}accept c619`**
        Accepts request `c619` from your pending requests
      error_message:
        invalid_request_id: "I'm sorry %{user}, I was unable to find a request with that ID"
      success_message: "The request has been accepted and I've notified the requestor"
    decline:
      description: "Declines a request based off its UUID"
      example: |-
        **`%{prefix}decline e09e`**
        Declines request `e09e` from your pending requests
      error_message:
        invalid_request_id: "I'm sorry %{user}, I was unable to find a request with that ID"
      success_message: "The request has been declined. The requestor **has not** be notified"
    add:
      description: "Adds the target user as a builder in the provided territory"
      example: |-
        **`%{prefix}add esm_malden jqjoe @Bryan`**
        Adds @Bryan to `jqjoe` on `esm_malden`

        **`%{prefix}add esm_malden some_territory @your_username`**
        If you are a territory admin, you may replace `@your_username` with a tag of yourself to add yourself to this territory.
      request_description: "Hi %{target_user}!\n%{current_user} wants to add you to their territory `%{territory_id}` on `%{server_id}`"
      requestee_description: "Hi %{target_user}!\n%{current_user} wants to add you to their territory `%{territory_id}` on `%{server_id}`"
      requestor_accepted: "Request `%{uuid}` has been accepted. Processing your request to add %{target_user} to `%{territory_id}` on `%{server_id}`"
      requestor_success: "Hi %{current_user}, %{target_user} has been added to territory `%{territory_id}` on %{server_id}"
      requestee_success: "Hi %{user}, you've been added to `%{territory_id}` successfully. Welcome aboard!"
    server_territories:
      description: "Displays the ID, name, and owner information for every territory on the provided server"
      example: |-
        **`%{prefix}server_territories esm_malden`**
        Displays all territories for server `esm_malden`

        **`%{prefix}server_territories esm_tanoa owner_name`**
        Displays all territories for server `esm_tanoa`, but they are sorted the owner's name
      arguments:
        order_by: "Controls how the territories are sorted before they are displayed"
      error_message:
        no_territories: "I'm sorry %{user}, it doesn't appear to be any territories on this server"
